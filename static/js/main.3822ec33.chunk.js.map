{"version":3,"sources":["image/machine.gif","image/machine.png","image/planet.gif","Secrets.js","DataModel.js","components/card.js","image/bottle.png","components/Modal.js","components/PrevCards.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","initializeFirestore","useFetchStreams","a","q","query","collection","getDocs","querySnapshot","data","forEach","doc","temp","id","readStatus","push","console","log","item","collRef","addDoc","handleUpdate","setDoc","header","text","Cards","instantlyCloseCard","useState","setData","useEffect","getData","then","res","length","className","Card","onClick","Body","map","Title","Text","ModalField","props","current","Date","date","getDate","getMonth","getFullYear","setText","setHeader","Modal","show","onHide","handleClose","backdrop","keyboard","centered","Button","variant","Form","Group","controlId","Label","Control","type","value","onChange","e","target","as","rows","alert","addItem","CardList","handleOpenItem","setShowList","setItem","handleData","PrevCards","showList","showItem","setShowItem","getPrevData","close","App","image","setImage","showCard","setShowCard","showPrevCard","setShowPrevCard","setShow","src","planet","bottle","machinePng","machineGif","setTimeout","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3822ec33.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/machine.ccbaeefb.gif\";","export default __webpack_public_path__ + \"static/media/machine.6b8d0ff1.png\";","export default __webpack_public_path__ + \"static/media/planet.5138cd14.gif\";","import { initializeApp, getApps } from 'firebase/app';\nimport {\n    initializeFirestore,collection, getDocs, query,\n    doc, addDoc, getDoc, onSnapshot, orderBy, limit\n} from \"firebase/firestore\";\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAsrXo0XBf8srEnJ3ZdVC2_X9TK4MRb4jQ\",\n    authDomain: \"star-letter-2020.firebaseapp.com\",\n    projectId: \"star-letter-2020\",\n    storageBucket: \"star-letter-2020.appspot.com\",\n    messagingSenderId: \"755999183317\",\n    appId: \"1:755999183317:web:fef717a13e923035832d5c\"\n};\n\n\nconst app = initializeApp(firebaseConfig);\n// if (getApps().length == 0){\n//     app = initializeApp(firebaseConfig);\n// }\nexport const db = initializeFirestore(app, {\n    useFetchStreams: false\n});\n","import { initializeApp, getApps } from 'firebase/app';\nimport {\n    initializeFirestore, collection, getDocs, query,\n    doc, addDoc, setDoc,getDoc, onSnapshot, orderBy, limit\n} from \"firebase/firestore\";\nimport { db } from './Secrets';\nimport {useEffect, useState} from \"react\";\nimport App from \"./App\";\n\n\n\n    export async function getData(){\n        const q = query(collection(db, \"Notes\"));\n        const querySnapshot = await getDocs(q);\n        let data = []\n        querySnapshot.forEach((doc) => {\n            let temp = doc.data();\n            temp['id'] = doc.id;\n            if(!temp.readStatus){\n                data.push(temp);\n            }\n        });\n        return data;\n    }\n\nexport async function getPrevData(){\n    const q = query(collection(db, \"Notes\"));\n    const querySnapshot = await getDocs(q);\n    let data = []\n    querySnapshot.forEach((doc) => {\n        let temp = doc.data();\n        temp['id'] = doc.id;\n        if(temp.readStatus){\n            data.push(temp);\n        }\n    });\n    console.log(data)\n    return data;\n}\n\n    export async function addItem(item) {\n        const collRef = collection(db, 'Notes');\n        let docRef = await addDoc(collRef, item);\n    }\n\nexport async function handleUpdate(id, item) {\n    await setDoc(doc(db, \"Notes\", id), {\n        'header': item.header,\n        'text': item.text,\n        'readStatus': true\n    });\n}\n\n\n\n\n\n\n","import React, {useState, useEffect} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card } from 'react-bootstrap';\nimport '../App.css';\nimport {getData, handleUpdate} from '../DataModel';\n\n\nfunction Cards({instantlyCloseCard}){\n    const [data,setData] = useState([])\n\n    useEffect(()=>{\n        getData().then(res=>{\n            if(res.length === 0){\n                let data = {\n                    'header': '嘿嘿',\n                    'text': '已经看完所有的啦',\n                }\n                setData([data]);\n            }\n            else{\n                setData(res)\n                for(let item of res){\n                    handleUpdate(item.id, item)\n                }\n            }\n        })\n\n\n    },[])\n\n    return(\n        <div className=\"card\">\n            <Card>\n                <button className= \"cardCloseBtn\" onClick={instantlyCloseCard}>X</button>\n                <Card.Body>\n                        {data.map((item) =>(\n                            <div className= \"scrollComponent\">\n                            <Card.Title>{item.header}</Card.Title>\n                                <Card.Text>\n                                    {item.text}\n                            </Card.Text>\n                            </div>\n                            )\n                        )}\n                </Card.Body>\n            </Card>\n\n        </div>\n    )\n}\nexport default Cards;","export default __webpack_public_path__ + \"static/media/bottle.52f95d91.png\";","import {Button,Modal, Form} from \"react-bootstrap\";\nimport React, {useState, useEffect} from 'react';\nimport {addItem} from '../DataModel';\nimport { FaFeatherAlt } from \"react-icons/fa\";\n\n\nfunction ModalField(props){\n\n    const current = new Date();\n    const date = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()}`\n    const [text, setText] = useState('');\n    const [header, setHeader] = useState(date);\n    let handleSubmit = ()=>{\n        if(header === '' || text === ''){\n            alert(\"请写标题和内容哦\")\n        }else{\n            let data = {\n                'header': header,\n                'text': text,\n                'readStatus': false\n            }\n            addItem(data);\n            props.onHide();\n        }\n\n    }\n\n    let handleClose=()=>{\n        props.onHide();\n    }\n    return(\n        <Modal\n            show={props.show}\n            onHide={props.handleClose}\n            backdrop={props.backdrop}\n            keyboard={props.keyboard}\n            centered\n        >\n        <Modal.Body className=\"modalBack\">\n            <Button variant=\"btn bg-transparent\" className=\"mdcloseBtn\" onClick={handleClose}>\n                X\n            </Button>\n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>标题</Form.Label>\n                    <Form.Control type=\"text\"\n                                  className=\"transparent-input\"\n                                  value={header}\n                                  onChange={(e)=>setHeader(e.target.value)}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>正文</Form.Label>\n                    <Form.Control as=\"textarea\" className=\"transparent-input\" rows={10} onChange={(e)=>setText(e.target.value)}/>\n                </Form.Group>\n            </Form>\n            <Button variant=\"btn bg-transparent\"  className=\"mdsubmitBtn\" onClick={handleSubmit}>\n                <FaFeatherAlt/> 投送\n\n            </Button>\n\n        </Modal.Body>\n    {/*<Modal.Footer>*/}\n    {/*    */}\n    {/*</Modal.Footer>*/}\n        </Modal>\n    )\n}\n\nexport default ModalField;","import React, {useState, useEffect} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card } from 'react-bootstrap';\nimport '../App.css';\nimport {getPrevData} from '../DataModel';\nimport Cards from \"./card\";\nimport { IoReturnDownBackOutline } from \"react-icons/io5\";\n\n\n\nexport function CardList({data,setShowList, handleOpenItem,setItem}){\n    let handleData = (item)=>{\n        setItem(item);\n        handleOpenItem();\n    }\n    return(\n        <div>\n            <div className=\"scrollComponent\">\n                <Card.Body>\n                    {data.map((item) =>(\n                            <div>\n                                {/*<Card.Title>{item.header}</Card.Title>*/}\n                                <Card.Text>\n                                    <button\n                                        className=\"machineBack\"\n                                        onClick={() =>handleData(item)}\n                                    >{item.header}</button>\n                                </Card.Text>\n                            </div>\n                        )\n                    )}\n                </Card.Body>\n            </div>\n        </div>\n    )\n}\n\nfunction PrevCards(props){\n    const [data,setData] = useState([])\n    const [showList, setShowList] = useState(true);\n    const [showItem,setShowItem] = useState(false);\n    const [item, setItem] = useState({})\n    let handleClose = ()=>{\n        props.close();\n    }\n\n    const handleOpenItem = ()=>{\n        setShowList(false);\n        setShowItem(true)\n\n    }\n    const handleBack=()=>{\n        setShowList(true);\n        setShowItem(false);\n    }\n\n    useEffect(()=>{\n        getPrevData().then((res)=>{\n            setData(res)\n        })\n    },[])\n\n\n\n    return(\n        <div className=\"card\">\n            <Card>\n                <button className= \"cardCloseBtn\" onClick={handleClose}>X</button>\n                { showList ? <CardList\n                    setShowList = {setShowList}\n                    data = {data}\n                    handleOpenItem = {handleOpenItem}\n                    setItem = {setItem}\n                />: null }\n                { showItem ?\n                    <div>\n                    <button className = \"machineBack\" onClick={handleBack}><IoReturnDownBackOutline/>主页</button>\n                    <div className = \"scrollComponent\">\n                        <Card.Body>\n                                <div>\n                                    <Card.Title>{item.header}</Card.Title>\n                                    <Card.Text>\n                                        {item.text}\n                                    </Card.Text>\n                                </div>\n                    </Card.Body>\n                    </div>\n                    </div>\n                    :null}\n            </Card>\n        </div>\n    )\n}\nexport default PrevCards;","import React, {useEffect, useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Modal, Button, Form} from 'react-bootstrap';\n\nimport machineGif from './image/machine.gif';\nimport machinePng from './image/machine.png';\nimport planet from './image/planet.gif'\nimport Cards from './components/card'\nimport bottle from './image/bottle.png'\nimport ModalField from './components/Modal'\nimport PrevCards from \"./components/PrevCards\";\nimport {getDataModel} from './DataModel';\nimport {collection, onSnapshot, query} from \"firebase/firestore\";\nimport { db } from './Secrets';\n\n\nfunction App(){\n\n    const [image, setImage] = useState(true);\n    const [showCard, setShowCard] = useState(false);\n    const [showPrevCard,setShowPrevCard] = useState(false);\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n    const handleCloseCard= () =>{\n        setTimeout(()=>{\n            setShowCard(false)\n        }, 60000)\n    }\n\n    const instantlyCloseCard=()=>{\n        setShowCard(false);\n    }\n\n    const handlePrevCard=()=>{\n        setShowPrevCard(true)\n    }\n\n    const handleClosePrevCard = ()=>{\n        setShowPrevCard(false)\n    }\n\n    const handleImageClick = () =>{\n        setImage(false)\n\n        setTimeout(()=>{\n            setImage(true)\n            setShowCard(true)\n            handleCloseCard();\n        }, 6000)\n    }\n\n\n    return(\n        <div className=\"container\">\n            <div className=\"C1\">\n                <div className=\"C1container\">\n                    <div className=\"buttonContainer\">\n                    <button className= \"machineBack\">\n                        <img src={planet}\n                             onClick={handleShow}\n                             className=\"planet\"\n                        />\n                    </button>\n                    </div>\n                    <div className=\"buttonContainer\">\n                    <button className= \"machineBack\">\n                        <img src={bottle}\n                             onClick={handlePrevCard}\n                             className=\"planet\"\n                        />\n                    </button>\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"C2\">\n                <div className=\"cardBox\">\n                    { showPrevCard ? <PrevCards close = {handleClosePrevCard}/> : null }\n                    { showCard ? <Cards instantlyCloseCard = {instantlyCloseCard}/> : null }\n                </div>\n            </div>\n            <div className=\"C3\">\n                <button className= \"machineBack\">\n                    <img src={image? machinePng: machineGif}\n                         onClick={handleImageClick}\n                         className=\"machine\" alt=\"Logo\" />\n                </button>\n            </div>\n\n            <ModalField\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            />\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}